diff --git a/build/pause/Makefile b/build/pause/Makefile
index 43f49e9d..afe53872 100644
--- a/build/pause/Makefile
+++ b/build/pause/Makefile
@@ -14,14 +14,14 @@
 
 .PHONY: all container clean orphan all-push push-manifest
 
-REGISTRY ?= staging-k8s.gcr.io
+REGISTRY ?= lcr.loongnix.cn/kubernetes
 IMAGE = $(REGISTRY)/pause
 
-TAG = 3.5
+TAG = 3.5.4
 REV = $(shell git describe --contains --always --match='v*')
 
 # Architectures supported: amd64, arm, arm64, ppc64le and s390x
-ARCH ?= amd64
+ARCH ?= loong64
 # Operating systems supported: linux, windows
 OS ?= linux
 # OS Version for the Windows images: 1809, 1903, 1909 2004, 20H2
@@ -32,7 +32,7 @@ OSVERSION ?= 1809 1903 1909 2004 20H2
 OUTPUT_TYPE ?= docker
 
 ALL_OS = linux windows
-ALL_ARCH.linux = amd64 arm arm64 ppc64le s390x
+ALL_ARCH.linux = amd64 arm arm64 ppc64le s390x loong64
 ALL_OS_ARCH.linux = $(foreach arch, ${ALL_ARCH.linux}, linux-$(arch))
 ALL_ARCH.windows = amd64
 ALL_OSVERSIONS.windows := 1809 1903 1909 2004 20H2
@@ -40,12 +40,12 @@ ALL_OS_ARCH.windows = $(foreach arch, $(ALL_ARCH.windows), $(foreach osversion,
 ALL_OS_ARCH = $(foreach os, $(ALL_OS), ${ALL_OS_ARCH.${os}})
 
 CFLAGS = -Os -Wall -Werror -static -DVERSION=v$(TAG)-$(REV)
-KUBE_CROSS_IMAGE.linux ?= k8s.gcr.io/build-image/kube-cross
+KUBE_CROSS_IMAGE.linux ?= lcr.loongnix.cn/kubernetes-build-image/kube-cross
 KUBE_CROSS_VERSION.linux ?= $(shell cat ../build-image/cross/VERSION)
 KUBE_CROSS_IMAGE.windows ?= dockcross/windows-static-x64
 KUBE_CROSS_VERSION.windows ?= latest
 KUBE_CROSS_IMAGE := ${KUBE_CROSS_IMAGE.${OS}}
-KUBE_CROSS_VERSION := ${KUBE_CROSS_VERSION.${OS}}
+KUBE_CROSS_VERSION := latest
 
 # NOTE(claudiub): The Windows pause image also requires the wincat binary we're compiling for the
 # port-forwarding scenarios. If it's no longer necessary, it can be removed.
@@ -70,6 +70,7 @@ TRIPLE.linux-arm := arm-linux-gnueabihf
 TRIPLE.linux-arm64 := aarch64-linux-gnu
 TRIPLE.linux-ppc64le := powerpc64le-linux-gnu
 TRIPLE.linux-s390x := s390x-linux-gnu
+TRIPLE.linux-loong64 := loongarch64-linux-gnu
 TRIPLE := ${TRIPLE.${OS}-${ARCH}}
 BASE.linux := scratch
 BASE.windows := mcr.microsoft.com/windows/nanoserver
@@ -81,6 +82,11 @@ all: all-container-docker
 # NOTE(claudiub): A non-default builder instance is needed in order to build Windows images.
 all-push: all-container-registry push-manifest
 
+push-loong64:
+	docker manifest create --amend $(IMAGE):$(TAG) $(shell echo $(ALL_OS_ARCH) | sed -e "s~[^ ]*~$(IMAGE):$(TAG)\-&~g")
+	set -x; for arch in loong64; do docker manifest annotate --os linux --arch $${arch} ${IMAGE}:${TAG} ${IMAGE}:${TAG}-linux-$${arch}; done
+	docker manifest push --purge ${IMAGE}:${TAG}
+
 push-manifest:
 	docker manifest create --amend $(IMAGE):$(TAG) $(shell echo $(ALL_OS_ARCH) | sed -e "s~[^ ]*~$(IMAGE):$(TAG)\-&~g")
 	set -x; for arch in $(ALL_ARCH.linux); do docker manifest annotate --os linux --arch $${arch} ${IMAGE}:${TAG} ${IMAGE}:${TAG}-linux-$${arch}; done
