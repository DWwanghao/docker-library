diff --git a/Makefile b/Makefile
index 3e04bf1..bd1cb64 100644
--- a/Makefile
+++ b/Makefile
@@ -68,6 +68,9 @@ MOCKERY=mockery
 
 .DEFAULT_GOAL := test-and-lint
 
+build:  init-submodules build-all-in-one
+	docker build --build-arg base_image="lcr.loongnix.cn/library/alpine:3.19" --build-arg debug_image="lcr.loongnix.cn/library/alpine:3.19" -t lcr.loongnix.cn/jaegertracing/all-in-one:1.35 -f cmd/all-in-one/Dockerfile ./cmd/all-in-one
+
 .PHONY: test-and-lint
 test-and-lint: test fmt lint
 
@@ -263,6 +266,10 @@ build-binaries-arm64:
 build-binaries-ppc64le:
 	GOOS=linux GOARCH=ppc64le $(MAKE) build-platform-binaries
 
+.PHONY: build-binaries-loong64
+build-binaries-loong64:
+	GOOS=linux GOARCH=loong64 $(MAKE) build-platform-binaries
+
 .PHONY: build-platform-binaries
 build-platform-binaries: build-agent \
 	build-agent-debug \
@@ -281,7 +288,7 @@ build-platform-binaries: build-agent \
 	build-es-rollover
 
 .PHONY: build-all-platforms
-build-all-platforms: build-binaries-linux build-binaries-windows build-binaries-darwin build-binaries-darwin-arm64 build-binaries-s390x build-binaries-arm64 build-binaries-ppc64le
+build-all-platforms: build-binaries-linux build-binaries-windows build-binaries-darwin build-binaries-darwin-arm64 build-binaries-s390x build-binaries-arm64 build-binaries-ppc64le build-binaries-loong64
 
 .PHONY: docker-images-cassandra
 docker-images-cassandra:
diff --git a/cmd/all-in-one/Dockerfile b/cmd/all-in-one/Dockerfile
index e92c89c..733fd57 100644
--- a/cmd/all-in-one/Dockerfile
+++ b/cmd/all-in-one/Dockerfile
@@ -28,14 +28,14 @@ EXPOSE 16686
 # Default configuration file for setting sampling strategies
 ENV SAMPLING_STRATEGIES_FILE=/etc/jaeger/sampling_strategies.json
 
-COPY all-in-one-linux-$TARGETARCH /go/bin/all-in-one-linux
+COPY all-in-one-linux-loong64 /go/bin/all-in-one-linux
 COPY sampling_strategies.json /etc/jaeger/
 
 VOLUME ["/tmp"]
 ENTRYPOINT ["/go/bin/all-in-one-linux"]
 
 FROM $debug_image AS debug
-ARG TARGETARCH=amd64
+ARG TARGETARCH=loong64
 
 # Agent zipkin.thrift compact
 EXPOSE 5775/udp
@@ -64,7 +64,7 @@ EXPOSE 12345
 # Default configuration file for setting sampling strategies
 ENV SAMPLING_STRATEGIES_FILE=/etc/jaeger/sampling_strategies.json
 
-COPY all-in-one-debug-linux-$TARGETARCH /go/bin/all-in-one-linux
+COPY all-in-one-linux-loong64 /go/bin/all-in-one-linux
 COPY sampling_strategies.json /etc/jaeger/
 
 VOLUME ["/tmp"]
diff --git a/cmd/query/app/ui/actual/.gitignore b/cmd/query/app/ui/actual/.gitignore
deleted file mode 100644
index d6b7ef3..0000000
--- a/cmd/query/app/ui/actual/.gitignore
+++ /dev/null
@@ -1,2 +0,0 @@
-*
-!.gitignore
diff --git a/go.mod b/go.mod
index 7620432..1b2497d 100644
--- a/go.mod
+++ b/go.mod
@@ -52,7 +52,7 @@ require (
 	go.uber.org/automaxprocs v1.5.1
 	go.uber.org/zap v1.21.0
 	golang.org/x/net v0.0.0-20220412020605-290c469a71a5
-	golang.org/x/sys v0.0.0-20220412211240-33da011f77ad
+	golang.org/x/sys v0.26.0
 	google.golang.org/grpc v1.46.2
 	google.golang.org/protobuf v1.28.0
 	gopkg.in/yaml.v2 v2.4.0
diff --git a/go.sum b/go.sum
index 691f2bf..50237f8 100644
--- a/go.sum
+++ b/go.sum
@@ -980,6 +980,8 @@ golang.org/x/sys v0.0.0-20211216021012-1d35b9e2eb4e/go.mod h1:oPkhp1MJrh7nUepCBc
 golang.org/x/sys v0.0.0-20220114195835-da31bd327af9/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
 golang.org/x/sys v0.0.0-20220412211240-33da011f77ad h1:ntjMns5wyP/fN65tdBD4g8J5w8n015+iIIs9rtjXkY0=
 golang.org/x/sys v0.0.0-20220412211240-33da011f77ad/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
+golang.org/x/sys v0.26.0 h1:KHjCJyddX0LoSTb3J+vWpupP9p0oznkqVk/IfjymZbo=
+golang.org/x/sys v0.26.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=
 golang.org/x/term v0.0.0-20201117132131-f5c789dd3221/go.mod h1:Nr5EML6q2oocZ2LXRh80K7BxOlk5/8JxuGnuhpl+muw=
 golang.org/x/term v0.0.0-20201126162022-7de9c90e9dd1/go.mod h1:bj7SfCRtBDWHUb9snDiAeCFNEtKQo2Wmx5Cou7ajbmo=
 golang.org/x/term v0.0.0-20210927222741-03fcf44c2211/go.mod h1:jbD1KX2456YbFQfuXm/mYQcufACuNUgVhRMnK/tPxf8=
diff --git a/scripts/build-all-in-one-image.sh b/scripts/build-all-in-one-image.sh
index 116ebbb..c125557 100755
--- a/scripts/build-all-in-one-image.sh
+++ b/scripts/build-all-in-one-image.sh
@@ -8,7 +8,7 @@ BRANCH=${BRANCH:?'missing BRANCH env var'}
 # `GOARCH=<target arch> ./scripts/build-all-in-one-image.sh`.
 GOARCH=${GOARCH:-$(go env GOARCH)}
 
-expected_version="v10"
+expected_version="v18"
 version=$(node --version)
 major_version=${version%.*.*}
 if [ "$major_version" = "$expected_version" ] ; then
@@ -31,13 +31,14 @@ run_integration_test() {
   docker kill $CID
 }
 
-make create-baseimg-debugimg
+#make create-baseimg-debugimg
 
 make build-all-in-one GOOS=linux GOARCH=amd64
 make build-all-in-one GOOS=linux GOARCH=s390x
 make build-all-in-one GOOS=linux GOARCH=ppc64le
 make build-all-in-one GOOS=linux GOARCH=arm64
-platforms="linux/amd64,linux/s390x,linux/ppc64le,linux/arm64"
+make build-all-in-one GOOS=linux GOARCH=loong64
+platforms="linux/amd64,linux/s390x,linux/ppc64le,linux/arm64,linux/loong64"
 repo=jaegertracing/all-in-one
 #build all-in-one image locally for integration test
 bash scripts/build-upload-a-docker-image.sh -l -b -c all-in-one -d cmd/all-in-one -p "${platforms}" -t release
diff --git a/scripts/build-upload-a-docker-image.sh b/scripts/build-upload-a-docker-image.sh
index 50d71ee..3b2f63a 100644
--- a/scripts/build-upload-a-docker-image.sh
+++ b/scripts/build-upload-a-docker-image.sh
@@ -6,7 +6,7 @@ base_debug_img_arg=""
 docker_file_arg="Dockerfile"
 target_arg=""
 local_test_only='N'
-platforms="linux/amd64"
+platforms="linux/loong64"
 name_space="jaegertracing"
 
 while getopts "lbc:d:f:p:t:" opt; do
